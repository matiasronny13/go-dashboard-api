// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bookmark": {
            "get": {
                "description": "Get all bookmarks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmark"
                ],
                "summary": "Get all bookmarks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Bookmark"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create Bookmark",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmark"
                ],
                "summary": "Create Bookmark",
                "parameters": [
                    {
                        "description": "Bookmark info",
                        "name": "info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Bookmark"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Bookmark"
                        }
                    }
                }
            }
        },
        "/bookmark/favicon": {
            "post": {
                "description": "Download favicon to server folder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmark"
                ],
                "summary": "Download favicon to server folder",
                "parameters": [
                    {
                        "description": "Favicon info",
                        "name": "info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Favicon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Favicon"
                        }
                    }
                }
            }
        },
        "/bookmark/{id}": {
            "delete": {
                "description": "Delete Bookmark",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmark"
                ],
                "summary": "Delete Bookmark",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Update Bookmark",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmark"
                ],
                "summary": "Update Bookmark",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bookmark info",
                        "name": "info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Bookmark"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Bookmark"
                        }
                    }
                }
            }
        },
        "/notes": {
            "get": {
                "description": "Get all notes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notes"
                ],
                "summary": "Get all notes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Notes"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create notes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notes"
                ],
                "summary": "Create notes",
                "parameters": [
                    {
                        "description": "New Notes",
                        "name": "notes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Notes"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Notes"
                        }
                    }
                }
            }
        },
        "/notes/{id}": {
            "get": {
                "description": "Get notes by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notes"
                ],
                "summary": "Get notes by id",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Notes"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete notes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notes"
                ],
                "summary": "Delete notes",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "description": "Update notes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notes"
                ],
                "summary": "Update notes",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Existing Notes",
                        "name": "notes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Notes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Notes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Bookmark": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Favicon": {
            "type": "object",
            "properties": {
                "downloadUrl": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                }
            }
        },
        "model.Notes": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
