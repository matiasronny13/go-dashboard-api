definitions:
  model.Bookmark:
    properties:
      groupId:
        type: integer
      icon:
        type: string
      id:
        format: uuid
        type: string
      name:
        type: string
      url:
        type: string
    type: object
  model.Favicon:
    properties:
      fileName:
        type: string
      url:
        type: string
    type: object
  model.Notes:
    properties:
      content:
        type: string
      id:
        format: uuid
        type: string
      title:
        type: string
    type: object
  model.Webtag:
    properties:
      id:
        type: string
      note:
        type: string
      tags:
        items:
          type: integer
        type: array
      title:
        type: string
      url:
        type: string
    type: object
info:
  contact: {}
paths:
  /bookmark:
    get:
      consumes:
      - application/json
      description: Get all bookmarks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Bookmark'
            type: array
      summary: Get all bookmarks
      tags:
      - Bookmark
    post:
      consumes:
      - application/json
      description: Create Bookmark
      parameters:
      - description: Bookmark info
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/model.Bookmark'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Bookmark'
      summary: Create Bookmark
      tags:
      - Bookmark
  /bookmark/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Bookmark
      parameters:
      - description: Id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete Bookmark
      tags:
      - Bookmark
    patch:
      consumes:
      - application/json
      description: Update Bookmark
      parameters:
      - description: Id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Bookmark info
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/model.Bookmark'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Bookmark'
      summary: Update Bookmark
      tags:
      - Bookmark
  /bookmark/favicon:
    post:
      consumes:
      - application/json
      description: Download favicon to server folder
      parameters:
      - description: Favicon info
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/model.Favicon'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Favicon'
      summary: Download favicon to server folder
      tags:
      - Bookmark
  /notes:
    get:
      consumes:
      - application/json
      description: Get all notes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Notes'
            type: array
      summary: Get all notes
      tags:
      - Notes
    post:
      consumes:
      - application/json
      description: Create notes
      parameters:
      - description: New Notes
        in: body
        name: notes
        required: true
        schema:
          $ref: '#/definitions/model.Notes'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Notes'
      summary: Create notes
      tags:
      - Notes
  /notes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete notes
      parameters:
      - description: Id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete notes
      tags:
      - Notes
    get:
      consumes:
      - application/json
      description: Get notes by id
      parameters:
      - description: Id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Notes'
      summary: Get notes by id
      tags:
      - Notes
    patch:
      consumes:
      - application/json
      description: Update notes
      parameters:
      - description: Id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Existing Notes
        in: body
        name: notes
        required: true
        schema:
          $ref: '#/definitions/model.Notes'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Notes'
      summary: Update notes
      tags:
      - Notes
  /webtag:
    get:
      consumes:
      - application/json
      description: Get all Webtag
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Webtag'
            type: array
      summary: Get all Webtag
      tags:
      - Webtag
    post:
      consumes:
      - application/json
      description: Create Webtag
      parameters:
      - description: New Webtag
        in: body
        name: Webtag
        required: true
        schema:
          $ref: '#/definitions/model.Webtag'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Webtag'
      summary: Create Webtag
      tags:
      - Webtag
  /webtag/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Webtag
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete Webtag
      tags:
      - Webtag
    get:
      consumes:
      - application/json
      description: Get Webtag by id
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Webtag'
      summary: Get Webtag by id
      tags:
      - Webtag
    patch:
      consumes:
      - application/json
      description: Update Webtag
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Existing Webtag
        in: body
        name: Webtag
        required: true
        schema:
          $ref: '#/definitions/model.Webtag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Webtag'
      summary: Update Webtag
      tags:
      - Webtag
swagger: "2.0"
